/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ventanas;

import conceptos.Servicio;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Corea
 */
public class ventanaServiciosValidados extends javax.swing.JDialog {

    private final ArrayList<Servicio> servicios = new ArrayList<>();
    private final ArrayList<String> seleccionInicial = new ArrayList<>();
    private final ArrayList<String> seleccionTrabajo = new ArrayList<>();
    private DefaultTableModel modelo;
    private boolean aceptado = false;

    // Constructor que recibe la ventana padre, si es modal y una lista de IDs de servicios seleccionados
    public ventanaServiciosValidados(java.awt.Frame parent, boolean modal) {
        this(parent, modal, new ArrayList<String>());
    }

    public ventanaServiciosValidados(java.awt.Frame parent, boolean modal, List<String> seleccion) {
        super(parent, modal);
        if (seleccion != null) {
            seleccionInicial.addAll(seleccion);
            seleccionTrabajo.addAll(seleccion);
        }
        
        initComponents();
        configurarTabla();
        llenarTabla();
        setLocationRelativeTo(parent);
    }
    // Configura el modelo de la tabla para mostrar los servicios y permitir selección
    private void configurarTabla() {
        modelo = new DefaultTableModel(new Object[]{"Validado", "Servicio"}, 0) {
            @Override public Class<?> getColumnClass(int columnIndex) { return columnIndex == 0 ? Boolean.class : String.class; }
            @Override public boolean isCellEditable(int row, int columnIndex) { return columnIndex == 0; }
        };
        jTable1.setModel(modelo);
    }
    // Llena la tabla con los servicios cargados desde el archivo XML
    private void llenarTabla() {
        servicios.clear();
        modelo.setRowCount(0);
        try {
            InputStream is = getClass().getClassLoader().getResourceAsStream("data/servicios.xml");
            if (is == null) {
                throw new FileNotFoundException("No se encontró data/servicios.xml en el classpath");
            }
            
            @SuppressWarnings("unchecked")
            ArrayList<Servicio> datos = (ArrayList<Servicio>) util.cargadorXML.Cargar(is, "servicio");
            servicios.addAll(datos);
            
            for (Servicio s : servicios) {
                boolean marcado = seleccionTrabajo.contains(s.getId());
                modelo.addRow(new Object[]{marcado, s.getNombre()});
            }
            
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }
    // Retorna true si el usuario aceptó los cambios, false si canceló
    public boolean fueAceptado() {
        return aceptado;
    }
    // Retorna la lista de IDs de servicios seleccionados
    public List<String> getServiciosSeleccionados() {
        return new ArrayList<>(aceptado ? seleccionTrabajo : seleccionInicial);
    }
    // Actualiza la lista de selección basada en el estado actual de la tabla
    private void actualizarSeleccionDesdeTabla() {
        seleccionTrabajo.clear();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            Object valor = modelo.getValueAt(i, 0);
            if (Boolean.TRUE.equals(valor)) {
                seleccionTrabajo.add(servicios.get(i).getId());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonCancelar = new javax.swing.JButton();
        jButtonAceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Validado", "Servicio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAceptar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonAceptar))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        aceptado = false;
        dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        actualizarSeleccionDesdeTabla();
        aceptado = true;
        dispose();
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaServiciosValidados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaServiciosValidados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaServiciosValidados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaServiciosValidados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ventanaServiciosValidados dialog = new ventanaServiciosValidados(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
